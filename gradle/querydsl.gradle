// 1. Setup dependencies
configurations {
    querydslapt
}

dependencies {
    // for the anontation processor
    querydslapt group: 'com.mysema.querydsl', name: 'querydsl-jpa', version: '2.8.0', classifier: 'apt-one-jar', transitive: false

    // for compiling
    compile("com.mysema.querydsl:querydsl-jpa:3.3.3")
    compile("com.mysema.querydsl:querydsl-apt:3.3.3")
}

// 2. Create the generated classes directory
def generatedSrcDir = 'src/main/generated'
task createGeneratedSrcDir << {
    file(generatedSrcDir).mkdirs()
}
compileJava.dependsOn createGeneratedSrcDir

idea.module.sourceDirs += file(generatedSrcDir)

task copyFactoryPath << {
    copy {
        from('src/build/eclipse') {
            include ".factorypath"
        }
        into '.'
        expand(querydslapt: configurations.querydslapt.asPath)
    }
    copy {
        from('src/build/eclipse') {
            include ".settings/org.eclipse.jdt.apt.core.prefs"
        }
        into '.'
        expand(generatedSrcDir: generatedSrcDir)
    }
}
eclipseClasspath.dependsOn copyFactoryPath

// 3. Add annotation proccesing to the compileJava Task
compileJava.options.compilerArgs = ["-s", file(generatedSrcDir).absolutePath]
clean {
    delete generatedSrcDir
}

// 4. turn on annotaion processsing in eclipse
task configureEclipseAPT << {
    // Write the .factorypath file
    project.file('.factorypath').withWriter{ writer ->
        def xml = new groovy.xml.MarkupBuilder(writer)
        xml.setDoubleQuotes(true)
        xml.factorypath() {
            factorypathentry(kind: "EXTJAR", id: configurations.querydslapt.asPath, enabled: "true", runInBatchMode: "false")
        }
    }

    // Write the org.eclipse.jdt.apt.core.prefs file:
    project.file('.settings').mkdirs()
    project.file('.settings/org.eclipse.jdt.apt.core.prefs').withWriter{ writer ->
        def props = new Properties()
        props.put('eclipse.preferences.version', '1')
        props.put('org.eclipse.jdt.apt.aptEnabled', 'true')
        props.put('org.eclipse.jdt.apt.genSrcDir', generatedSrcDir)
        props.put('org.eclipse.jdt.apt.reconcileEnabled', 'true')
        props.store(writer, null)
    }
}
eclipseClasspath.dependsOn configureEclipseAPT

// enable process annotations
eclipse.jdt.file {
    withProperties { props ->
        props.put('org.eclipse.jdt.core.compiler.processAnnotations', 'enabled')
    }
}
